{"version":3,"sources":["components/SearchForm.js","img/loading.gif","components/Loading.js","components/RecipeCard.js","components/Recipes.js","components/ConditionalRender.js","img/chef-icon.jpg","components/Navbar.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","searchRecipe","useState","text","setText","className","onSubmit","e","preventDefault","alert","type","name","value","onChange","target","placeholder","autoComplete","autoFocus","Loading","src","Loadimg","alt","style","display","margin","width","RecipeCard","food","recipe","label","image","calories","color","toFixed","Recipes","map","recipes","idx","ConditionalRender","loading","Navbar","backgroundColor","logo","to","About","flexDirection","justifyContent","alignItems","App","setrecipe","setLoading","query","a","axios","get","response","data","hits","console","log","path","exact","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f93ef1b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst SearchForm = ({ searchRecipe }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (text === \"\") {\r\n      return alert(\"Please Enter Something...\");\r\n    }\r\n    searchRecipe(text);\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className='search-form' onSubmit={submitHandler}>\r\n      <input\r\n        className='search-form__input'\r\n        type='search'\r\n        name='search'\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        placeholder='Search Recipe...'\r\n        autoComplete='off'\r\n        autoFocus\r\n      />\r\n      <input type='submit' value='Search' className='search-form__btn' />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","export default __webpack_public_path__ + \"static/media/loading.2187296e.gif\";","import React from \"react\";\r\nimport Loadimg from \"../img/loading.gif\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <img\r\n      src={Loadimg}\r\n      alt='Loading'\r\n      style={{ display: \"block\", margin: \" 100px auto\", width: \"100px\" }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\n\r\nconst RecipeCard = ({ food }) => {\r\n  const { label, image, calories } = food.recipe;\r\n  return (\r\n    <div className='recipe-card'>\r\n      <h3 style={{ color: \"blue\" }}>{label}</h3>\r\n\r\n      <img className='card-img-top' src={image} alt={label} width='100%' />\r\n      <h5>Calories: {calories.toFixed(2)}</h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeCard;\r\n","import React from \"react\";\r\nimport RecipeCard from \"./RecipeCard\";\r\n\r\nconst Recipes = ({ recipe }) => {\r\n  return (\r\n    <main className='recipes' >\r\n      {recipe.map((recipes, idx) => (\r\n        <div key={idx}>\r\n          <RecipeCard food={recipes} />\r\n        </div>\r\n      ))}\r\n    </main>\r\n  );\r\n};\r\nconst style = {\r\n \r\n};\r\n\r\nexport default Recipes;\r\n","import React from \"react\";\r\nimport Loading from \"./Loading\";\r\nimport Recipes from \"./Recipes\";\r\n\r\nconst ConditionalRender = ({ loading, recipe }) => {\r\n  return <>{loading ? <Loading /> : <Recipes recipe={recipe} />}</>;\r\n};\r\n\r\nexport default ConditionalRender;\r\n","export default __webpack_public_path__ + \"static/media/chef-icon.1126841c.jpg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../img/chef-icon.jpg\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className='navbar' style={{ backgroundColor: \"lightsteelblue\" }}>\r\n      <img src={logo} alt='icon' width='50px' />\r\n      <h1 className='navbar__title'>Recipe Searcher</h1>\r\n\r\n      <ul>\r\n        <li>\r\n          <Link to='/'>Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/about'>About</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h1>About This App</h1>\r\n      <p>App to search Recipe Items</p>\r\n      <p>Version: 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import axios from \"axios\";\nimport react, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SearchForm from \"./components/SearchForm\";\nimport ConditionalRender from \"./components/ConditionalRender\";\nimport Navbar from \"./components/Navbar\";\nimport About from \"./components/About\";\n\nfunction App() {\n  const [recipe, setrecipe] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const searchRecipe = async (query) => {\n    setLoading(true);\n    const response = await axios.get(\n      `https://api.edamam.com/search?q=${query}&app_id=1e7a8114&app_key=0768bd374dd3225ab4f3c307519fc687`\n    );\n\n    setrecipe(response.data.hits);\n    setLoading(false);\n    console.log(response.data);\n    console.log(query);\n  };\n\n  return (\n    <Router>\n      <div className='App'>\n        <Navbar />\n        <Switch>\n          <Route\n            path='/'\n            exact\n            render={() => (\n              <>\n                <SearchForm searchRecipe={searchRecipe} />\n                <ConditionalRender loading={loading} recipe={recipe} />\n              </>\n            )}\n          />\n          <Route path='/about' component={About} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}